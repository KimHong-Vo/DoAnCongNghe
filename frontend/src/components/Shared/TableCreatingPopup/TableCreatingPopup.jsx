import React from "react";
import Styles from "./TableCreatingPopup.module.scss";

import {
  Popover,
  Button,
  IconButton,
  FormControl,
  NativeSelect,
  Select,
  Box,
  MenuItem,
} from "@mui/material";
import { grey } from "@mui/material/colors";
import ChevronLeftIcon from "@mui/icons-material/ChevronLeft";
import ClearIcon from "@mui/icons-material/Clear";
import MoreHoriz from "@mui/icons-material/MoreHoriz";
import WorkIcon from "@mui/icons-material/Work";

const TableCreatingPopup = (props) => {
  const backgroundImage = [
    "https://images.unsplash.com/photo-1652541594278-d7dbc83be9d6?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=Mnw3MDY2fDB8MXxjb2xsZWN0aW9ufDF8MzE3MDk5fHx8fHwyfHwxNjUyOTQyMTQ2&ixlib=rb-1.2.1&q=80&w=400",
    "https://images.unsplash.com/photo-1656094829222-fd695b4ba6e1?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=Mnw3MDY2fDB8MXxjb2xsZWN0aW9ufDF8MzE3MDk5fHx8fHwyfHwxNjU2MjU1MTkw&ixlib=rb-1.2.1&q=80&w=400",
    "https://images.unsplash.com/photo-1656119651638-9825fe739131?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=Mnw3MDY2fDB8MXxjb2xsZWN0aW9ufDJ8MzE3MDk5fHx8fHwyfHwxNjU2MjU1MTkw&ixlib=rb-1.2.1&q=80&w=400",
    "https://images.unsplash.com/photo-1656067638332-1d189bf81079?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=Mnw3MDY2fDB8MXxjb2xsZWN0aW9ufDN8MzE3MDk5fHx8fHwyfHwxNjU2MjU1MTkw&ixlib=rb-1.2.1&q=80&w=400",
  ];
  const bgColors = [
    "rgb(0, 121, 191)",
    "rgb(210, 144, 52)",
    "rgb(81, 152, 57)",
    "rgb(176, 70, 50)",
    "rgb(137, 96, 158)",
    "rgb(131, 140, 145)",
  ];
  const elementWorkSpace = [
    "WorkSpace 1",
    "WorkSpace 2",
    "WorkSpace 3",
    "WorkSpace 4",
  ];

  const [permission, setPermission] = React.useState(20);

  const handleChange = (event) => {
    setPermission(event.target.value);
  };

  return (
    <div>
      <section className={Styles.tableCreatingPopup}>
        <header className={Styles.headerTableCreatingPopup}>
          <IconButton aria-label="goBack" sx={{ gridColumn: 1, gridRow: 1 }}>
            <ChevronLeftIcon sx={{ fontSize: 25 }}></ChevronLeftIcon>
          </IconButton>
          <IconButton aria-label="close" sx={{ gridColumn: 3, gridRow: 1 }}>
            <ClearIcon sx={{ fontSize: 20 }}></ClearIcon>
          </IconButton>
          <div className={Styles.titleHeader}>T·∫°o b·∫£ng</div>
        </header>
        <div className={Styles.bodyTableCreatingPopup}>
          <div className={Styles.prototypeBackground}>
            <div className={Styles.backgroundImgPrototype}>
              <img
                src="https://a.trellocdn.com/prgb/dist/images/board-preview-skeleton.14cda5dc635d1f13bc48.svg"
                alt=""
                role="presentation"
              ></img>
            </div>
          </div>
          <div className={Styles.chooseBackground}>
            <div>
              {" "}
              <label for="background-picker">Ph√¥ng n·ªÅn</label>{" "}
            </div>
            <div id="background-picker">
              
              <ul className={Styles.background}>
                {/* {backgroundImage.map((x, i) => (
                  <li className={Styles.backgroundImg} key={i}>
                    <img src={x} alt="imgBackground" />
                  </li>
                ))} 
                  Map ra th·∫ª img v·∫≠y n√®, r·ªìi √¥ng set s·ª± ki·ªán onClick cho th·∫ª <li></li>.
                  √îng t·∫°o th√™m c√°i useState l√† 1 c√°i string background ·∫£nh, r·ªìi m·ªói l·∫ßn click v√¥ th·∫ª li l√† set background
                    c·ªßa useState l·∫°i l√† x.
                */
                  
                }
              </ul>
              <ul className={Styles.background}>
                {[...Array(5)].map((x, i) => (
                  <li className={Styles.backgroundColor} key={i}>
                    <button
                      className={Styles.buttonChooseBackgroundColor}
                    ></button>
                  </li>
                ))}
                <li className={Styles.backgroundColor}>
                  <button className={Styles.buttonChooseBackgroundColorExtend}>
                    <MoreHoriz sx={{ color: grey[700] }}></MoreHoriz>
                  </button>
                </li>
              </ul>
            </div>
          </div>
          <form>
            <div className="TittleTable">
              <label className={Styles.titleTable}>
                <div>
                  Ti√™u ƒë·ªÅ b·∫£ng
                  <span className={Styles.noteImportantSpan}>*</span>
                </div>
                <input
                  className={Styles.inputField}
                  type="text"
                  spellCheck="off"
                ></input>
              </label>
            </div>
            <div className={Styles.notification}>
              <span
                role="img"
                aria-label="wave"
                className={Styles.notificationIcon}
              >
                üëã
              </span>
              <p>Ti√™u ƒë·ªÅ b·∫£ng l√† b·∫Øt bu·ªôc</p>
            </div>
            <label>Kh√¥ng gian l√†m vi·ªác</label>
            <FormControl fullWidth>
              <NativeSelect
                defaultValue={1}
                inputProps={{
                  name: "nameOfWorkSpace",
                  id: "uncontrolled-native",
                }}
              >
                {elementWorkSpace.map((value, index) => {
                  return <option key={index}>{value}</option>;
                })}
              </NativeSelect>
            </FormControl>
            <label>Quy·ªÅn xem</label>
            <Box sx={{ minWidth: 120 }}>
              <FormControl fullWidth>
                <Select
                  defaultValue={20}
                  value={permission}
                  onChange={handleChange}
                >
                  <MenuItem value={10}>Ri√™ng t∆∞</MenuItem>
                  <MenuItem value={20}>Kh√¥ng gian l√†m vi·ªác</MenuItem>
                  <MenuItem value={30}>C√¥ng khai</MenuItem>
                </Select>
              </FormControl>
            </Box>
            <p className={Styles.notificationText}>
              Kh√¥ng gian l√†m vi·ªác n√†y c√≤n 10 b·∫£ng. C√°c Kh√¥ng gian l√†m vi·ªác mi·ªÖn
              ph√≠ ch·ªâ c√≥ th·ªÉ c√≥ 10 b·∫£ng m·ªü. ƒê·ªÉ c√≥ b·∫£ng kh√¥ng gi·ªõi h·∫°n, h√£y n√¢ng
              c·∫•p Kh√¥ng gian l√†m vi·ªác c·ªßa b·∫°n.
            </p>
            <div className="StartToTryFree">
              <button className={Styles.buttonStartToTryFree}>
                <WorkIcon sx={{ paddingRight: 1 }} fontSize="small"></WorkIcon>
                <div className={Styles.textOfStartToTryFree}>
                  B·∫Øt ƒë·∫ßu d√πng th·ª≠ mi·ªÖn ph√≠
                </div>
              </button>
            </div>
            <button disabled className={Styles.buttonCreateNew}>
              T·∫°o m·ªõi
            </button>
          </form>
          <button className={Styles.buttonStartWithTemplate}>
            B·∫Øt ƒë·∫ßu v·ªõi m·∫´u
          </button>
        </div>
      </section>
    </div>
  );
};

export default TableCreatingPopup;
